@using Microsoft.AspNet.Identity
@using QuanLyTaiSan_UserManagement.Models;
@*@model RegisterUser*@
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Share/_LayoutPage1.cshtml";
}
<div class="row">
    <div class="col-lg-12">
        <section class="panel">
            <header class="panel-heading mypanel">
                Quản Lý Người Dùng
                <div class="btn-group pull-right">
                    @if ((ViewData["GroupId"] as string) == "ADMIN" || (ViewData["GroupId"] as string) == "DIRECTOR")
                    {
                        <button class="btn green btn-success" data-toggle="modal" data-target="#registerModal" onclick="registerModal()">
                            Tạo mới <i class="icon-plus"></i>
                        </button>
                    }
                </div>
            </header>
            <div class="panel-body">
                <div class="adv-table">
                    <div class="clearfix ">
                        <table class="display table table-bordered table-striped table-hover" style="table-layout: fixed">
                            <thead>
                                <tr>
                                    <th>Tên người Dùng</th>
                                    <th>Tên đăng nhập</th>
                                    <th>Quyền</th>
                                    <th>Tên quyền</th>
                                    <th style="width: 10%; text-align: center">Sửa</th>
                                    <th style="width: 10%; text-align: center">Xóa</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in (IList<QuanLyTaiSan_UserManagement.InformationUser>)ViewData["Users"])
                                {
                                    <tr>
                                        <td>@item.FullName</td>
                                        <td>@item.Username</td>
                                        <td>@item.RoleGroupID</td>
                                        <td>@item.RoleGroupName</td>
                                        <td class="center">
                                            <a class="EditUserLogin icon-pencil" href="#" data-id="@item.Username"></a>
                                        </td>
                                        <td class="center">
                                            <a class="delete icon-trash" href="#" id="deleteItem" data-id="@item.Id"></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

<div class="modal fade" id="registerModal" tabindex="-1" role="dialog" aria-labelledby="registerModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content form-horizontal">
            @*@using (Html.BeginForm("UserIndex1", "UserRole", FormMethod.Post, new { @class = "form-horizontal ", role = "form" }))
                {*@

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Đăng kí tài khoản mới</h4>
            </div>
            <div class="modal-body">
                @*@Html.AntiForgeryToken()*@
                <div class="login-wrap">
                    <label class="text-danger" id="ToastCheckNullName" style="display:none">Bạn phải nhập Tên đăng nhập</label>
                    <label class="text-danger" id="ToastCheckNullPass" style="display:none">Bạn phải nhập Mật khẩu</label>
                    <label class="text-danger" id="ToastCheckNullDepartment" style="display:none">Bạn phải chọn đơn vị</label>
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <div class="form-group">
                        <label class="col-md-4 control-label">Tên đầy đủ</label>
                        <div class="col-md-8">
                            <input class="form-control" id="FullName" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Tên đăng nhập</label>
                        <div class="col-md-8">
                            <input class="form-control" id="Username" autocomplete="off" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label"> Loại tài khoản </label>
                        <div class="col-md-8">
                            <select class="form-control" style="color: #888484" name="TypeAcc" id="TypeAcc">
                                <option value="0">Tài khoản thường</option>
                                <option value="1">Tài khoản quản trị</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label"> Quyền </label>
                        <div class="col-md-8">
                            <select class="form-control" style="color: #888484" name="Role" id="Role">
                                @foreach (var item in ViewData["Roles"] as IList<UserGroup>)
                                {
                                    <option value="@item.ID">@item.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group department-section" style="display: none;">
                        <label class="col-md-4 control-label"> Phòng ban </label>
                        <div class="col-md-8">
                            <select class="form-control" style="color: #888484" name="Department" id="Department">
                                @foreach (var item in (ViewData["Department"] as IList<GetUnitsById_Result>).Where(x => x.HasChild == 1).ToList())
                                {
                                    <option value="@item.Id">@item.ProjectName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group unit-section" style="display: none;">
                        <label class="col-md-4 control-label"> Đơn vị </label>
                        <div class="col-md-8">
                            <select class="form-control" style="color: #888484" name="UnitDepartment" id="UnitDepartment">
                                @foreach (var item in (ViewData["Department"] as IList<GetUnitsById_Result>).Where(x => x.HasChild == 0).ToList())
                                {
                                    <option value="@item.Id">@item.ProjectName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Mật khẩu</label>
                        <div class="col-md-8">
                            <input class="form-control" id="Password" required autocomplete="off" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="Create btn btn-primary" type="button">Lưu</button>
                <button data-dismiss="modal" class="btn btn-default" type="button">Hủy</button>

            </div>
            @*}*@
        </div>
    </div>
</div>


<div class="modal fade" id="EditregisterModal" tabindex="-1" role="dialog" aria-labelledby="registerModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content form-horizontal">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Sửa tài khoản</h4>
            </div>
            <div class="modal-body">

                <div class="login-wrap">
                    <label class="text-danger" id="ToastCheckNullNameEdit" style="display:none">Bạn phải nhập Tên đăng nhập</label>
                    <label class="text-danger" id="ToastCheckNullPassEdit" style="display:none">Bạn phải nhập Mật khẩu</label>
                    <label class="text-danger" id="ToastCheckNullDepartmentEdit" style="display:none">Bạn phải chọn đơn vị</label>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Tên đầy đủ</label>
                        <div class="col-md-8">
                            <input class="form-control" id="FullNameEdit" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Tên đăng nhập</label>
                        <div class="col-md-8">
                            <input class="form-control" id="UsernameEdit" autocomplete="off" readonly="readonly" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label"> Loại tài khoản </label>
                        <div class="col-md-8">
                            <select class="form-control" style="color: #888484" name="TypeAccEdit" id="TypeAccEdit">
                                <option value="0">Tài khoản thường</option>
                                <option value="1">Tài khoản quản trị</option>
                            </select>
                        </div>
                    </div>
                     <div class="form-group">
                        <label class="col-md-4 control-label"> Quyền </label>
                        <div class="col-md-8">
                            <select class="form-control" style="color: #888484" name="RoleEdit" id="RoleEdit">
                                @foreach (var item in ViewData["Roles"] as IList<UserGroup>)
                                {
                                    <option value="@item.ID">@item.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group department-section-edit" style="display: none;">
                        <label class="col-md-4 control-label"> Phòng ban </label>
                        <div class="col-md-8">
                            <select class="form-control" style="color: #888484" name="DepartmentEdit" id="DepartmentEdit">
                                @foreach (var item in (ViewData["Department"] as IList<GetUnitsById_Result>).Where(x => x.HasChild == 1).ToList())
                                {
                                    <option value="@item.Id">@item.ProjectName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group unit-section-edit" style="display: none;">
                        <label class="col-md-4 control-label"> Đơn vị </label>
                        <div class="col-md-8">
                            <select class="form-control" style="color: #888484" name="UnitDepartmentEdit" id="UnitDepartmentEdit">
                                @foreach (var item in (ViewData["Department"] as IList<GetUnitsById_Result>).Where(x => x.HasChild == 0).ToList())
                                {
                                    <option value="@item.Id">@item.ProjectName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group" style="">
                        <label class="col-md-4 control-label">Mật khẩu</label>
                        <div class="col-md-8">
                            <input class="form-control" type="password" id="PasswordEdit" name="PasswordEdit" required autocomplete="off" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="Edit btn btn-primary" type="button" id="btnConfirmEdit">Cập nhật</button>
                <button data-dismiss="modal" class="btn btn-default" type="button">Hủy</button>

            </div>

        </div>
    </div>
</div>
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="teM" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Xóa người dùng</h4>
            </div>
            <div class="modal-body">
                Bạn có muốn xóa người dùng?

            </div>
            <div class="modal-footer">
                <button data-dismiss="modal" class="btn btn-default" type="button">Hủy</button>
                <a id="btnConfirmDelete" class="btn btn-warning"> Xoá</a>
            </div>
        </div>
    </div>
</div>
<input id="HiddenUserName" type="hidden" />
<input id="HiddenUserIdRole" type="hidden" />
<script>
    $("#Department").change(function () {
        var id = $('#Department').val(); 
        if (id) {
            $.ajax({
                type: 'GET',
                dataType: 'json',
                url: "/UserRole/GetListDepartmentByIds",
                data: { id: parseInt(id) },
                success: function (response) {
                    var data = response.result;
                    if (data != null) {
                        $('#UnitDepartment').empty();
                        $.each(data, function (index, option) {
                            $('#UnitDepartment').append('<option value="' + option.Id + '">' + option.ProjectName + '</option>');
                        });
                    } else {
                        alert('Có lỗi xảy ra trong quá trình xử lý');
                    }
                },
                error: function () {
                    alert("Error occurred while updating the second dropdown.");
                }
            });
        } else {
            $('#UnitDepartment').empty();
        }
    }); 

    $("#DepartmentEdit").change(function () {
        var id = $('#DepartmentEdit').val();
        if (id) {
            $.ajax({
                type: 'GET',
                dataType: 'json',
                url: "/UserRole/GetListDepartmentByIds",
                data: { id: parseInt(id) },
                success: function (response) {
                    var data = response.result;
                    if (data != null) {
                        $('#UnitDepartmentEdit').empty();
                        $.each(data, function (index, option) {
                            $('#UnitDepartmentEdit').append('<option value="' + option.Id + '">' + option.ProjectName + '</option>');
                        });
                    } else {
                        alert('Có lỗi xảy ra trong quá trình xử lý');
                    }
                },
                error: function () {
                    alert("Error occurred while updating the second dropdown.");
                }
            });
        } else {
            $('#UnitDepartmentEdit ').empty();
        }
    }); 

    var registerModal = function () {
        $('#ToastCheckNullPass').hide();
        $('#ToastCheckNullName').hide();
        $('#ToastCheckNullDepartment').hide();
    }
    //Thêm người dùng
    $(".Create").click(function (e) {
        var FullName = $('#FullName').val().trim();
        var Role = $('#Role').val().trim();
        var Username = $('#Username').val().trim();
        var Password = $('#Password').val().trim();
        var Department = $('#UnitDepartment').val().trim();
        var TypeAcc = $('#TypeAcc').val().trim();

        if (Username == "" || Username == null) {
            $('#ToastCheckNullName').show();
            $('#ToastCheckNullPass').hide();
            $('#ToastCheckNullDepartment').hide();
        }
        else if (Password == "" || Password == null) {
            $('#ToastCheckNullPass').show();
            $('#ToastCheckNullName').hide();
            $('#ToastCheckNullDepartment').hide();
        }
        else if (Role === "MANAGER" && (Department == "" || Department == null)) {
            $('#ToastCheckNullDepartment').show();
            $('#ToastCheckNullName').hide();
            $('#ToastCheckNullPass').hide();
        }
        else {
            var departmentValue = null;
            if (Role === "MANAGER") {
                departmentValue = Department;
            } else if (Role === "DIRECTOR") {
                departmentValue = $('#Department').val().trim();
            }

            $.ajax({
                type: "POST",
                url: "/UserRole/RegisterUser",
                data: { 
                    FullName: FullName, 
                    Username: Username, 
                    Role: Role, 
                    Password: Password, 
                    Department: departmentValue, 
                    TypeAcc: TypeAcc 
                },
                success: function (result) {
                    if (result) {
                        location.reload();
                    } else {
                        alert('Tên đăng nhập đã tồn tại');
                    }
                }
            });
        }
    })
    $(".EditUserLogin").click(function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url: "/UserRole/GetInfoAccount",
            data: { userId: id },
            success: function (response) {
                var data = response.userMapper;
                if (data != null) {
                    $('#EditregisterModal').modal('show');
                    $('#FullNameEdit').val(data.FullName.trim());
                    $('#UsernameEdit').val(data.UserName.trim());
                    $('#RoleEdit').val(data.GroupId.trim());
                    $('#PasswordEdit').val(data.PassWord.trim());
                    $('#HiddenUserIdRole').val(data.Id);
                    $('#UnitDepartmentEdit').val(data.Email.trim());
                    $('#DepartmentEdit').val(data.Department.trim());
                    $('#TypeAccEdit').val(data.Status);
                    
                    // Hiển thị/ẩn các trường theo role
                    toggleDepartmentFieldsEdit(data.GroupId.trim());
                } else {
                    alert('Có lỗi xảy ra trong quá trình xử lí');
                }
            }
        });
    });

    // Hàm kiểm tra và hiển thị/ẩn các trường dựa trên quyền cho form edit
    function toggleDepartmentFieldsEdit(roleValue) {
        // Ẩn tất cả trước
        $('.department-section-edit').hide();
        $('.unit-section-edit').hide();

        // Xử lý theo từng loại role
        switch(roleValue) {
            case "ADMIN":
                // Ẩn cả hai trường
                break;
            case "DIRECTOR":
                // Chỉ hiện phòng ban
                $('.department-section-edit').show();
                break;
            case "MANAGER":
                // Hiện cả phòng ban và đơn vị
                $('.department-section-edit').show();
                $('.unit-section-edit').show();
                break;
        }
    }

    // Xử lý sự kiện khi thay đổi role trong form edit
    $('#RoleEdit').change(function() {
        toggleDepartmentFieldsEdit($(this).val());
        
        // Reset giá trị của các trường khi thay đổi quyền thành ADMIN
        if ($(this).val() === "ADMIN") {
            $('#DepartmentEdit').val($('#DepartmentEdit option:first').val());
            $('#UnitDepartmentEdit').val($('#UnitDepartmentEdit option:first').val());
        }
    });

    // Cập nhật xử lý submit form edit
    $("#btnConfirmEdit").click(function () {
        var ID = $('#HiddenUserIdRole').val().trim();
        var FullNameEdit = $('#FullNameEdit').val().trim();
        var UsernameEdit = $('#UsernameEdit').val().trim();
        var RoleEdit = $('#RoleEdit').val().trim();
        var PasswordEdit = $('#PasswordEdit').val().trim();
        var DepartmentEdit = $('#UnitDepartmentEdit').val().trim();
        var TypeAccEdit = $('#TypeAccEdit').val().trim();

        if (UsernameEdit == "" || UsernameEdit == null) {
            $('#ToastCheckNullNameEdit').show();
            $('#ToastCheckNullPassEdit').hide();
            $('#ToastCheckNullDepartmentEdit').hide();
        }
        else if (PasswordEdit == "" || PasswordEdit == null) {
            $('#ToastCheckNullPassEdit').show();
            $('#ToastCheckNullNameEdit').hide();
            $('#ToastCheckNullDepartmentEdit').hide();
        }
        else if (RoleEdit === "MANAGER" && (DepartmentEdit == "" || DepartmentEdit == null)) {
            $('#ToastCheckNullDepartmentEdit').show();
            $('#ToastCheckNullNameEdit').hide();
            $('#ToastCheckNullPassEdit').hide();
        }
        else {
            var departmentValue = null;
            if (RoleEdit === "MANAGER") {
                departmentValue = DepartmentEdit;
            } else if (RoleEdit === "DIRECTOR") {
                departmentValue = $('#DepartmentEdit').val().trim();
            }

            $.ajax({
                type: "POST",
                url: "/UserRole/ChangeRoleByUserId",
                data: { 
                    ID: ID, 
                    FullName: FullNameEdit, 
                    Username: UsernameEdit, 
                    Role: RoleEdit, 
                    Password: PasswordEdit, 
                    Department: departmentValue, 
                    TypeAcc: TypeAccEdit 
                },
                success: function (result) {
                    if (result) {
                        location.reload();
                    } else {
                        alert('Có lỗi xảy ra trong quá trình xử lí');
                    }
                }
            });
        }
    });
    //Xóa thông tin người dùng
    $(".delete").click(function () {
        var id = $(this).attr('data-id');
        $('#deleteModal').modal('show');
        $("#btnConfirmDelete").click(function () {
            $.ajax({
                type: "POST",
                url: "/UserRole/DeleteUser",
                data: { userId: id },
                success: function (result) {
                    if (result) {
                        location.reload();
                    }
                    else {
                        alert('Có lỗi xảy ');
                    }
                }
            });
        });

    });

    // Hàm kiểm tra và hiển thị/ẩn các trường dựa trên quyền
    function toggleDepartmentFields(roleValue) {
        // Ẩn tất cả trước
        $('.department-section').hide();
        $('.unit-section').hide();

        // Xử lý theo từng loại role
        switch(roleValue) {
            case "ADMIN":
                // Ẩn cả hai trường
                break;
            case "DIRECTOR":
                // Chỉ hiện phòng ban
                $('.department-section').show();
                break;
            case "MANAGER":
                // Hiện cả phòng ban và đơn vị
                $('.department-section').show();
                $('.unit-section').show();
                break;
        }
    }

    // Xử lý sự kiện khi trang được tải
    $(document).ready(function() {
        // Kiểm tra giá trị quyền ban đầu
        toggleDepartmentFields($('#Role').val());
        
        // Xử lý sự kiện khi thay đổi quyền
        $('#Role').change(function() {
            toggleDepartmentFields($(this).val());
            
            // Reset giá trị của các trường khi thay đổi quyền
            if ($(this).val() === "ADMIN") {
                $('#Department').val($('#Department option:first').val());
                $('#UnitDepartment').val($('#UnitDepartment option:first').val());
            }
        });
    });
</script>



